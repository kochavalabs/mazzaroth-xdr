version: 2

jobs:
  build:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - run:
          name: Get Rust
          command: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"
      - run:
          name: Setup Env
          command: echo "export PATH=$HOME/.cargo/bin:$PATH" >> $BASH_ENV
      - run:
          name: NPM Install
          command: npm install
      - run:
          name: Clean
          command: rm -rf ./js/*
      - run:
          name: Get Deps
          command: npm run get-deps
      - run:
          name: Build Javascript
          command: npm run build-js
      - run:
          name: Verify No Changes
          command: if [[ `git status --porcelain` ]]; then  { printf '%s\n' "Should not have git changes." >&2; exit 1; }; fi

  publish-js-dev:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Set Develop Version
          command: git rev-parse develop | cut -c1-10 | xargs -I[] ./node_modules/package-tagger/index.js dev.[]
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > .npmrc
      - run:
          name: Publish package
          command: npm publish --tag develop

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - publish-js-dev:
          requires:
            - build
          filters:
            branches:
              only: develop
